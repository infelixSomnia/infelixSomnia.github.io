/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// src/main.ts
__export(exports, {
  TextMapper: () => TextMapper,
  default: () => TextMapperPlugin
});
var import_obsidian2 = __toModule(require("obsidian"));

// src/apocalypse.ts
var APOCALYPSE = `
# Apocalypse

# This file is for use with text-mapper.
# https://alexschroeder.ch/cgit/text-mapper/about/

# To the extent possible under law, the authors have waived all
# copyright and related or neighboring rights to this work.
# https://creativecommons.org/publicdomain/zero/1.0/

default attributes fill="none" stroke="black" stroke-width="3"
apoc-sand attributes fill="#eedd82"
apoc-coast attributes fill="#7fffd4"
apoc-sea attributes fill="#4169e1"
apoc-desert attributes fill="#ede787"
apoc-red attributes fill="red"
apoc-debug attributes fill="red" opacity="0.8" transform="scale(0.5)"

<g id="apoc-tundra"><polygon fill="#8fbc8f" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#696" d="m 2,-47 c -3,2 -2,12 1,5 2,-2 2,-5 -1,-5 z m -7,3 c -7,1 6,10 1,2 l 0,-1 z m -50,15 c -2,5 6,8 8,10 3,-4 -5,-7 -8,-10 z m 20,2 c -3,1 -4,9 -1,6 2,-2 5,-6 1,-6 z m 82,0 c -4,3 -3,13 1,6 1,-2 2,-5 -1,-6 z m -91,1 c -1,3 1,6 3,5 1,-2 1,-5 -2,-5 z m 53,-5 c -3,0 -3,3 -1,5 3,7 4,-3 1,-5 z m 31,7 c -8,1 5,11 1,3 0,-1 -1,-2 -1,-3 z m -24,-4 -1,1 0,1 c -5,8 8,-1 1,-2 z M 62,-1 C 59,2 51,5 54,9 56,7 64,4 62,-1 z M -40,-5 c -3,1 -2,4 -1,6 4,7 5,-3 1,-6 z m 82,6 c -4,0 -1,4 1,6 3,3 2,-5 -1,-6 z M -10,0 c -4,3 7,14 4,5 -1,-2 -2,-4 -4,-5 z m 60,2 c -3,0 -3,3 -2,5 2,1 4,-2 3,-5 z M 0,2 C -4,4 -3,14 0,7 1,6 4,2 0,2 z m -33,-4 c 0,1 -1,2 -1,3 -4,8 9,-2 1,-3 z m -1,27 c -2,5 6,8 8,11 3,-5 -5,-8 -8,-11 z m 20,2 c -3,1 -4,7 -2,5 3,-1 3,-2 2,-5 z m -8,1 c 0,0 0,0 -1,1 -1,2 2,7 3,5 0,-2 1,-6 -1,-6 0,0 0,0 -1,0 z M 23,18 c -2,1 -3,3 -4,5 -3,9 8,-2 4,-5 z m -10,2 c -4,0 -1,4 0,5 3,7 4,-3 0,-5 z m 24,17 c -3,3 -11,6 -8,11 2,-3 10,-6 8,-11 z m 20,-3 c -2,1 -6,10 -2,7 1,-2 8,-6 2,-7 z m -40,5 c -1,3 -1,4 2,5 2,2 1,-4 -2,-5 z m 35,-3 c -6,0 0,12 0,3 1,-1 0,-2 0,-3 z m -28,4 c -2,0 -1,4 -1,6 1,2 4,-3 3,-5 -1,-1 -1,-1 -2,-1 z M -58,12 c -6,1 1,5 2,7 4,3 0,-6 -2,-7 z m 5,2 c 0,1 -1,2 0,3 0,9 6,-3 0,-3 z"/></g>
<g id="apoc-wetland"><polygon fill="#2e8b57" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#254" d="m -18,-13 C -13,-6 -13,4 -8,12 C -11,14 -15,21 -18,26 C -20,17 -22,4 -28,0 C -26,-4 -21,-9 -18,-13 z M 5,-31 C 4,-19 3,-6 6,5 C 1,10 -0,14 -3,19 C -2,6 -3,-4 -4,-16 C -4,-21 2,-26 5,-31 z M 26,-1 C 16,6 19,5 9,18 C 12,3 21,-8 34,-17 C 32,-12 29,-6 27,-1 z"/></g>
<g id="apoc-swamp"><polygon fill="#dcddbe" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#450" d="m 2,-47 c -3,2 -2,12 1,5 2,-2 2,-5 -1,-5 z m -7,3 c -7,1 6,10 1,2 l 0,-1 z m 8,8 c -7,1 -15,3 -22,3 0,5 6,1 9,3 7,-2 15,-4 23,0 6,2 13,-1 19,-2 -2,-6 -12,3 -17,-1 -4,-1 -8,-2 -12,-3 z m -58,7 c -2,5 6,8 8,10 3,-4 -5,-7 -8,-10 z m 20,2 c -3,1 -4,9 -1,6 2,-2 5,-6 1,-6 z m -8,1 c 0,0 0,0 -1,0 -1,3 1,6 3,5 1,-2 1,-5 -2,-5 z m -21,9 c -1,6 10,5 15,4 7,-2 14,-1 21,1 2,0 12,2 10,-2 -7,0 -15,-3 -23,-3 -6,0 -13,4 -20,1 -1,-1 -2,-1 -3,-1 z M 47,-27 c -4,3 -3,13 1,6 1,-2 2,-5 -1,-6 z m -7,3 c -8,1 5,11 1,3 0,-1 -1,-2 -1,-3 z m 7,9 c -7,1 -14,2 -21,2 -1,5 6,1 8,3 8,-2 16,-3 23,0 7,2 13,-1 19,-2 -2,-6 -12,3 -17,-1 -4,-1 -8,-2 -12,-2 z m -63,11 c -4,3 7,14 4,5 -1,-2 -2,-4 -4,-5 z m 10,2 c -4,2 -3,12 0,5 1,-1 4,-5 0,-5 z M -50,8 c -1,0 -1,0 -2,0 -4,2 -14,-1 -15,4 1,0 1,0 2,1 8,-1 17,-3 25,1 7,1 13,-4 19,0 6,-1 13,-4 20,0 5,-4 -6,-4 -8,-6 -8,3 -15,3 -23,2 -6,4 -12,-2 -18,-2 z m 80,1 c -2,5 6,8 8,11 3,-5 -5,-8 -8,-11 z m 20,2 c -3,1 -4,7 -2,5 3,-1 3,-2 2,-5 z m -7,1 c -1,0 -1,0 -2,1 -1,2 2,7 3,5 0,-2 1,-6 -1,-6 z m -22,9 c -1,6 10,5 15,5 6,-3 14,-2 21,0 2,0 12,2 10,-2 -7,0 -15,-3 -23,-3 -6,0 -13,5 -20,1 -1,0 -2,-1 -3,-1 z m -36,11 c -2,1 -6,10 -2,7 1,-2 8,-6 2,-7 z m -5,2 c -6,0 0,12 0,3 1,-1 0,-2 0,-3 z m 14,8 c -7,1 -15,4 -22,0 -6,0 -14,0 -17,3 4,4 11,-3 17,1 7,3 15,0 23,-1 7,0 13,5 21,1 6,-1 12,2 19,2 C 38,43 27,44 24,44 16,41 9,47 2,43 -1,42 -3,42 -6,42 z"/></g>
<g id="apoc-forest"><polygon fill="#b7c18c" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#450" d="m -12,-34 c -6,3 -5,3 -7,15 -5,3 -31,1 -28,16 2,9 8,7 16,11 -8,10 -11,16 -9,20 2,4 8,7 21,5 3,13 8,15 13,16 5,1 13,0 19,-11 12,6 26,9 30,6 4,-3 8,-16 3,-28 C 58,9 53,3 53,-2 52,-7 44,-7 32,-11 c 3,-13 4,-13 1,-16 -4,-3 -13,-7 -24,0 -8,-10 -14,-10 -20,-8 z m 3,4 c 4,-1 9,-1 16,8 9,-6 18,-4 22,-1 3,2 1,4 -1,15 11,3 20,5 20,9 C 49,4 53,8 43,13 47,24 44,36 41,39 38,42 22,38 12,33 7,43 1,44 -3,44 -7,43 -14,40 -16,29 -27,30 -32,29 -34,26 c -2,-4 1,-9 8,-18 -9,-5 -20,-4 -13,-18 2,-4 12,-5 23,-5 2,-11 4,-14 8,-15 z"/></g>
<g id="apoc-woodland"><polygon fill="#9acd32" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#006000" d="m -12,-34 c -6,3 -5,3 -7,15 -5,3 -31,1 -28,16 2,9 8,7 16,11 -8,10 -11,16 -9,20 2,4 8,7 21,5 3,13 8,15 13,16 5,1 13,0 19,-11 12,6 26,9 30,6 4,-3 8,-16 3,-28 C 58,9 53,3 53,-2 52,-7 44,-7 32,-11 c 3,-13 4,-13 1,-16 -4,-3 -13,-7 -24,0 -8,-10 -14,-10 -20,-8 z m 3,4 c 4,-1 9,-1 16,8 9,-6 18,-4 22,-1 3,2 1,4 -1,15 11,3 20,5 20,9 C 49,4 53,8 43,13 47,24 44,36 41,39 38,42 22,38 12,33 7,43 1,44 -3,44 -7,43 -14,40 -16,29 -27,30 -32,29 -34,26 c -2,-4 1,-9 8,-18 -9,-5 -20,-4 -13,-18 2,-4 12,-5 23,-5 2,-11 4,-14 8,-15 z"/></g>
<g id="apoc-hill"><polygon fill="#daa520" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#b8860b" d="m -42,11 C -38,5 -34,0 -28,-3 C -20,-6 -11,-5 -5,-0 C -2,2 1,6 3,9 C 4,12 2,13 0,14 C -3,9 -7,5 -13,2 C -21,-1 -30,0 -36,6 C -38,9 -40,11 -43,14 C -43,15 -44,14 -44,13 C -43,12 -43,12 -42,11 z M -5,-0 C 0,-6 7,-12 15,-16 C 21,-18 28,-17 33,-14 C 39,-11 41,-5 43,-0 C 42,2 41,5 39,2 C 37,-2 33,-8 27,-10 C 20,-13 12,-12 6,-7 C 2,-4 -1,-1 -4,1 C -7,4 -6,0 -5,-0 z"/></g>
<g id="apoc-grass"><polygon fill="#b0b446" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#450" d="m -18,-13 C -13,-6 -13,4 -8,12 C -11,14 -15,21 -18,26 C -20,17 -22,4 -28,0 C -26,-4 -21,-9 -18,-13 z M 5,-31 C 4,-19 3,-6 6,5 C 1,10 -0,14 -3,19 C -2,6 -3,-4 -4,-16 C -4,-21 2,-26 5,-31 z M 26,-1 C 16,6 19,5 9,18 C 12,3 21,-8 34,-17 C 32,-12 29,-6 27,-1 z"/></g>
<g id="apoc-mountain"><polygon fill="#708090" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#450" d="m 30,-30 c -5,3 -19,18 -28,28 -4,-5 -7,-10 -9,-16 -7,4 -40,43 -43,53 2,2 4,2 6,2 7,-8 26,-40 34,-46 10,14 26,31 35,49 2,-1 4,-3 5,-3 C 30,33 16,18 3,0 11,-8 21,-19 29,-25 39,-9 49,-3 58,13 60,12 60,11 61,10 61,5 42,-7 29,-30 z"/></g>
<g id="apoc-jungle"><polygon fill="#77904c" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#450" d="m 8,-20 c -6,-12 -36,-5 -44,7 9,-6 35,-12 37,-5 -18,0 -29,6 -33,24 C -22,-13 -8,-14 2,-13 -8,6 -20,13 -16,50 c 4,3 9,-5 5,-8 -1,-7 -1,-13 0,-20 C -10,10 1,-7 9,-12 27,-8 36,0 34,15 44,4 30,-12 14,-15 28,-16 41,-7 45,1 47,-8 29,-19 17,-20 c 11,-7 25,-3 30,3 -5,-14 -36,-11 -39,-3 z"/></g>
<g id="apoc-volcano"><polygon fill="#C08090" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#A07080" d="m 31,-61 c -2,0 -4,1 -6,2 -6,-2 -12,7 -7,13 -2,-5 -1,-14 7,-12 5,-3 12,-5 14,3 0,-4 -3,-7 -7,-6 z m 8,7 c -3,0 -6,2 -8,6 7,-8 17,-4 15,4 5,0 9,5 5,14 4,-6 2,-15 -4,-16 0,-4 -3,-8 -8,-8 z m -5,8 c -3,0 -7,1 -11,3 -8,-5 -27,5 -20,15 C 2,-40 13,-46 23,-41 c 7,-4 22,-9 20,6 3,-9 -2,-12 -8,-12 z m -2,11 c -5,0 -9,2 -10,6 7,-8 19,-6 23,2 14,1 14,11 0,14 18,1 16,-14 2,-15 -2,-4 -9,-7 -15,-7 z m -17,7 C 7,-28 -1,-23 1,-15 3,-27 15,-30 23,-23 c 8,-2 16,3 15,16 3,-10 -3,-20 -14,-18 -2,-2 -6,-3 -9,-3 z m 3,13 C 9,-15 -1,-11 -9,-7 -12,3 -16,17 -30,13 c -8,-2 -7,7 -12,11 -8,6 -10,17 -18,24 4,0 7,-1 10,0 -1,-4 8,-20 14,-27 2,-7 10,-4 15,-4 8,-6 13,-14 18,-21 8,2 16,1 24,2 3,1 6,0 9,-1 -1,8 12,22 16,25 4,6 1,16 6,21 10,-2 5,1 15,0 C 65,35 59,36 56,30 48,20 35,6 34,-7 c 0,0 0,0 0,0 -3e-4,0 3e-4,0 0,0 0,-1 0,-2 0,-3 -4,-3 -10,-5 -16,-5 z m 0,2 c 4,0 8,1 11,3 5,5 0,5 -6,6 C 19,-4 7,-6 -1,-6 -3,-8 8,-13 18,-13 z"/></g>
<g id="apoc-fin"><polygon fill="#d40000" points="-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6"/><path fill="#800000" d="m 0,-43 C -17,-44 -27,-15 -28,-5 c -6,-9 -14,-14 -22,-7 -7,6 -17,32 -21,39 8,1 4,0 7,0 0,-4 13,-46 30,-36 7,5 15,30 11,36 2,1 3,0 7,0 0,-8 -4,-21 -10,-30 4,-8 7,-23 12,-29 8,-9 29,-21 30,27 -2,1 -4,2 -6,4 -7,5 -17,32 -21,38 8,1 4,1 7,1 0,-5 13,-47 30,-36 8,4 15,29 11,35 3,1 4,1 7,0 0,-8 -4,-20 -9,-30 3,-8 7,-22 12,-28 8,-10 29,-22 29,31 2,0 8,1 6,-1 C 77,6 75,-24 70,-28 48,-47 32,-7 31,5 27,0 23,-4 18,-5 16,-14 14,-35 11,-39 7,-42 3,-43 0,-43 z"/></g>

# Black with white border
<g id="apoc-fort"> <path stroke="white" stroke-width="5pt" d="M 0,4 C -6,7 -7,22 -6,26 -3,26 4,25 7,26 8,24 6,5 0,4 z M 7,-7 C 10,3 19,14 15,29 8,28 -5,30 -14,29 -13,9 -9,1 7,-7 z M 6,-38 c 7,12 34,23 48,27 -1,6 0,12 1,14 -9,-5 -11,-7 -18,-9 -3,14 0,24 2,33 -9,0 -7,3 -14,3 1,-13 4,-32 5,-39 -9,-4 -17,-11 -26,-17 -8,7 -20,13 -29,20 1,12 0,21 2,33 -7,1 -8,2 -14,4 0,-9 2,-22 1,-31 -7,4 -14,6 -21,8 2,-11 45,-22 64,-46 z"/> <path fill="black" d="M 0,4 C -6,7 -7,22 -6,26 -3,26 4,25 7,26 8,24 6,5 0,4 z M 7,-7 C 10,3 19,14 15,29 8,28 -5,30 -14,29 -13,9 -9,1 7,-7 z M 6,-38 c 7,12 34,23 48,27 -1,6 0,12 1,14 -9,-5 -11,-7 -18,-9 -3,14 0,24 2,33 -9,0 -7,3 -14,3 1,-13 4,-32 5,-39 -9,-4 -17,-11 -26,-17 -8,7 -20,13 -29,20 1,12 0,21 2,33 -7,1 -8,2 -14,4 0,-9 2,-22 1,-31 -7,4 -14,6 -21,8 2,-11 45,-22 64,-46 z"/> </g>
<g id="apoc-ruin"> <path stroke="white" stroke-width="5pt" d="m -5.9,-44.7 c -1.7,11.1 -12.4,22.6 -19.9,28.7 l 4.7,2.7 c 1.6,-1.4 4.2,-4.1 5.5,-5.4 12.1,23.9 2.3,48.8 -6.1,63.5 3.8,0.1 5.3,0.6 6.6,1.2 13.9,-31.1 7.2,-58.7 3.4,-66.3 l -2.5,0 c 3.7,-2.6 10.6,-17.9 11.7,-18.1 5.1,7.8 8.3,12.4 14.4,18.5 l -2.9,0.2 C 6,3.4 8.5,30.4 16,46 18.4,45.6 20.7,45.5 22.7,45.8 14.2,24 6.8,1.1 13.4,-18.1 c 0.4,0.5 2.8,1.9 3.2,2.5 4,-2.3 4.5,-1.6 5.9,-2 -5.9,-5.5 -19.6,-16.1 -23,-26.8 0,-0.7 -4.6,-0.2 -5.4,-0.2 z m 0.4,24.8 -4.7,0.1 c 0.7,1.1 2.1,4.3 2.5,5.6 l 3,0 c -0.4,-1.2 -0.4,-4.5 -0.9,-5.7 z m 5.4,-0.1 -3.8,0.3 c 0.8,1.7 0.6,3.8 0.8,5.5 l 3.9,-0.1 c -0.2,-1.7 -0.5,-4.3 -0.9,-5.8 z m 1.8,-0.1 c 0.3,1.8 0.3,3.6 0.5,5.9 l 3.9,-0.2 c 0.1,-1.8 0.3,-3.4 0.5,-5.2 z M 1.4,-5.8 c -0.1,1.5 0.8,5.7 0.5,7 l 2.9,0 c 0.2,-1.4 0.3,-5.8 0.6,-7 z m -6.4,5 c 0.1,1.6 0.1,5.1 0,6.6 l 4.3,0 c 0,-1.5 -0.1,-5.2 0,-6.6 z M 0.9,9.9 C 1.1,11.2 1.5,14.8 1.5,16.2 L 5.5,16 C 5.4,14.6 5,11.1 5.1,9.7 z M -4.6,14.5 c 0.1,0.8 -0.3,4.5 -0.4,5.2 l 4.1,0.2 c 0.1,-0.8 0.4,-4.5 0.5,-5.3 z m 5.7,9.9 c 0.2,1.4 0.7,5.1 0.8,6.4 l 6.2,0.2 C 7.9,30.4 6,27.3 5.6,24.6 z m -8.6,7.8 c 3,-0.7 3.4,-0.2 6.2,-0.4 0,-0.5 0.3,-5.6 0.3,-6.1 -2.4,-0.3 -2.5,0.2 -5.1,-0.2 0.1,3 -0.9,5 -1.4,6.7 z m 6.6,3.9 C -3.5,36.8 -6.2,44.1 -6.5,46.3 -3.4,45.8 4.7,45.9 6.2,45.7 6.2,40.8 3.2,34.9 -1,36.1 z"/> <path fill="black" d="m -5.9,-44.7 c -1.7,11.1 -12.4,22.6 -19.9,28.7 l 4.7,2.7 c 1.6,-1.4 4.2,-4.1 5.5,-5.4 12.1,23.9 2.3,48.8 -6.1,63.5 3.8,0.1 5.3,0.6 6.6,1.2 13.9,-31.1 7.2,-58.7 3.4,-66.3 l -2.5,0 c 3.7,-2.6 10.6,-17.9 11.7,-18.1 5.1,7.8 8.3,12.4 14.4,18.5 l -2.9,0.2 C 6,3.4 8.5,30.4 16,46 18.4,45.6 20.7,45.5 22.7,45.8 14.2,24 6.8,1.1 13.4,-18.1 c 0.4,0.5 2.8,1.9 3.2,2.5 4,-2.3 4.5,-1.6 5.9,-2 -5.9,-5.5 -19.6,-16.1 -23,-26.8 0,-0.7 -4.6,-0.2 -5.4,-0.2 z m 0.4,24.8 -4.7,0.1 c 0.7,1.1 2.1,4.3 2.5,5.6 l 3,0 c -0.4,-1.2 -0.4,-4.5 -0.9,-5.7 z m 5.4,-0.1 -3.8,0.3 c 0.8,1.7 0.6,3.8 0.8,5.5 l 3.9,-0.1 c -0.2,-1.7 -0.5,-4.3 -0.9,-5.8 z m 1.8,-0.1 c 0.3,1.8 0.3,3.6 0.5,5.9 l 3.9,-0.2 c 0.1,-1.8 0.3,-3.4 0.5,-5.2 z M 1.4,-5.8 c -0.1,1.5 0.8,5.7 0.5,7 l 2.9,0 c 0.2,-1.4 0.3,-5.8 0.6,-7 z m -6.4,5 c 0.1,1.6 0.1,5.1 0,6.6 l 4.3,0 c 0,-1.5 -0.1,-5.2 0,-6.6 z M 0.9,9.9 C 1.1,11.2 1.5,14.8 1.5,16.2 L 5.5,16 C 5.4,14.6 5,11.1 5.1,9.7 z M -4.6,14.5 c 0.1,0.8 -0.3,4.5 -0.4,5.2 l 4.1,0.2 c 0.1,-0.8 0.4,-4.5 0.5,-5.3 z m 5.7,9.9 c 0.2,1.4 0.7,5.1 0.8,6.4 l 6.2,0.2 C 7.9,30.4 6,27.3 5.6,24.6 z m -8.6,7.8 c 3,-0.7 3.4,-0.2 6.2,-0.4 0,-0.5 0.3,-5.6 0.3,-6.1 -2.4,-0.3 -2.5,0.2 -5.1,-0.2 0.1,3 -0.9,5 -1.4,6.7 z m 6.6,3.9 C -3.5,36.8 -6.2,44.1 -6.5,46.3 -3.4,45.8 4.7,45.9 6.2,45.7 6.2,40.8 3.2,34.9 -1,36.1 z"/> </g>
<g id="apoc-pyramid"><path stroke="white" stroke-width="5pt" d="m -1,-43 c -22,23 -46,49 -65,70 45,0 90,0 129,0 C 41,2 18,-22 -1,-43 z m 0,6 20,22 -22,0 0,-5 5,0 0,-3 -11,0 0,3 3,0 0,5 -4,0 0,3 23,0 0,4 -11,0 0,3 18,0 0,-3 -4,0 0,-4 5,0 32,35 -109,0 z m 32,40 -57,0 0,3 9,0 0,3 -17,0 0,3 29,0 0,-3 -9,0 0,-3 45,0 z"/><path fill="black" d="m -1,-43 c -22,23 -46,49 -65,70 45,0 90,0 129,0 C 41,2 18,-22 -1,-43 z m 0,6 20,22 -22,0 0,-5 5,0 0,-3 -11,0 0,3 3,0 0,5 -4,0 0,3 23,0 0,4 -11,0 0,3 18,0 0,-3 -4,0 0,-4 5,0 32,35 -109,0 z m 32,40 -57,0 0,3 9,0 0,3 -17,0 0,3 29,0 0,-3 -9,0 0,-3 45,0 z"/></g>
<g id="apoc-cave"><path stroke="white" stroke-width="5pt" d="M -16.6,40 c 5.4,-39.2 45.8,-37.9 41.1,1.2 -14.5,-4.2 -25.9,1.6 -41.1,-1.2 z M -33.3,39.6 C -30.1,34.0 -16.7,-4.3 9.6,-4.7 28.2,-3.5 41.8,26.1 41.9,41.7 37.7,42.1 36.4,43.4 29.3,41.0 30.4,26.2 21.1,1.9 4.7,1.2 -11.7,0.5 -21.7,26.7 -26.7,39.0 c -2.4,1.0 -4.8,1.0 -6.6,0.7 z"/> <path fill="black" d="M -16.6,40 c 5.4,-39.2 45.8,-37.9 41.1,1.2 -14.5,-4.2 -25.9,1.6 -41.1,-1.2 z M -33.3,39.6 C -30.1,34.0 -16.7,-4.3 9.6,-4.7 28.2,-3.5 41.8,26.1 41.9,41.7 37.7,42.1 36.4,43.4 29.3,41.0 30.4,26.2 21.1,1.9 4.7,1.2 -11.7,0.5 -21.7,26.7 -26.7,39.0 c -2.4,1.0 -4.8,1.0 -6.6,0.7 z"/> </g>
    
# Black only
#<g id="apoc-fort"><path fill="black" d="m 0,4 C -6,7 -7,22 -6,26 -3,26 4,25 7,26 8,24 6,5 0,4 z M 7,-7 C 10,3 19,14 15,29 8,28 -5,30 -14,29 -13,9 -9,1 7,-7 z M 6,-38 c 7,12 34,23 48,27 -1,6 0,12 1,14 -9,-5 -11,-7 -18,-9 -3,14 0,24 2,33 -9,0 -7,3 -14,3 1,-13 4,-32 5,-39 -9,-4 -17,-11 -26,-17 -8,7 -20,13 -29,20 1,12 0,21 2,33 -7,1 -8,2 -14,4 0,-9 2,-22 1,-31 -7,4 -14,6 -21,8 2,-11 45,-22 64,-46 z"/></g>
#<g id="apoc-ruin"><path fill="black" d="m -5.9,-44.7 c -1.7,11.1 -12.4,22.6 -19.9,28.7 l 4.7,2.7 c 1.6,-1.4 4.2,-4.1 5.5,-5.4 12.1,23.9 2.3,48.8 -6.1,63.5 3.8,0.1 5.3,0.6 6.6,1.2 13.9,-31.1 7.2,-58.7 3.4,-66.3 l -2.5,0 c 3.7,-2.6 10.6,-17.9 11.7,-18.1 5.1,7.8 8.3,12.4 14.4,18.5 l -2.9,0.2 C 6,3.4 8.5,30.4 16,46 18.4,45.6 20.7,45.5 22.7,45.8 14.2,24 6.8,1.1 13.4,-18.1 c 0.4,0.5 2.8,1.9 3.2,2.5 4,-2.3 4.5,-1.6 5.9,-2 -5.9,-5.5 -19.6,-16.1 -23,-26.8 0,-0.7 -4.6,-0.2 -5.4,-0.2 z m 0.4,24.8 -4.7,0.1 c 0.7,1.1 2.1,4.3 2.5,5.6 l 3,0 c -0.4,-1.2 -0.4,-4.5 -0.9,-5.7 z m 5.4,-0.1 -3.8,0.3 c 0.8,1.7 0.6,3.8 0.8,5.5 l 3.9,-0.1 c -0.2,-1.7 -0.5,-4.3 -0.9,-5.8 z m 1.8,-0.1 c 0.3,1.8 0.3,3.6 0.5,5.9 l 3.9,-0.2 c 0.1,-1.8 0.3,-3.4 0.5,-5.2 z M 1.4,-5.8 c -0.1,1.5 0.8,5.7 0.5,7 l 2.9,0 c 0.2,-1.4 0.3,-5.8 0.6,-7 z m -6.4,5 c 0.1,1.6 0.1,5.1 0,6.6 l 4.3,0 c 0,-1.5 -0.1,-5.2 0,-6.6 z M 0.9,9.9 C 1.1,11.2 1.5,14.8 1.5,16.2 L 5.5,16 C 5.4,14.6 5,11.1 5.1,9.7 z M -4.6,14.5 c 0.1,0.8 -0.3,4.5 -0.4,5.2 l 4.1,0.2 c 0.1,-0.8 0.4,-4.5 0.5,-5.3 z m 5.7,9.9 c 0.2,1.4 0.7,5.1 0.8,6.4 l 6.2,0.2 C 7.9,30.4 6,27.3 5.6,24.6 z m -8.6,7.8 c 3,-0.7 3.4,-0.2 6.2,-0.4 0,-0.5 0.3,-5.6 0.3,-6.1 -2.4,-0.3 -2.5,0.2 -5.1,-0.2 0.1,3 -0.9,5 -1.4,6.7 z m 6.6,3.9 C -3.5,36.8 -6.2,44.1 -6.5,46.3 -3.4,45.8 4.7,45.9 6.2,45.7 6.2,40.8 3.2,34.9 -1,36.1 z"/></g>
#<g id="apoc-pyramid"><path fill="black" d="m -1,-43 c -22,23 -46,49 -65,70 45,0 90,0 129,0 C 41,2 18,-22 -1,-43 z m 0,6 20,22 -22,0 0,-5 5,0 0,-3 -11,0 0,3 3,0 0,5 -4,0 0,3 23,0 0,4 -11,0 0,3 18,0 0,-3 -4,0 0,-4 5,0 32,35 -109,0 z m 32,40 -57,0 0,3 9,0 0,3 -17,0 0,3 29,0 0,-3 -9,0 0,-3 45,0 z"/></g>
#<g id="apoc-cave"><path fill="black" d="m -16.6,40 c 5.4,-39.2 45.8,-37.9 41.1,1.2 -14.5,-4.2 -25.9,1.6 -41.1,-1.2 z M -33.3,39.6 C -30.1,34.0 -16.7,-4.3 9.6,-4.7 28.2,-3.5 41.8,26.1 41.9,41.7 37.7,42.1 36.4,43.4 29.3,41.0 30.4,26.2 21.1,1.9 4.7,1.2 -11.7,0.5 -21.7,26.7 -26.7,39.0 c -2.4,1.0 -4.8,1.0 -6.6,0.7 z"/></g>

apoc-road path attributes stroke="black" stroke-width="3" fill-opacity="0" stroke-dasharray="10 10"
apoc-river path attributes stroke="#66cdaa" stroke-width="10" fill-opacity="0" stroke-linecap="round"
apoc-border path attributes stroke="red" stroke-width="15" stroke-opacity="0.5" fill-opacity="0"
`;

// src/error.ts
var import_obsidian = __toModule(require("obsidian"));
var ParseError = class extends import_obsidian.MarkdownRenderChild {
  constructor(containerEl) {
    super(containerEl);
    __publicField(this, "outputEl");
    containerEl.innerText = "Error!";
  }
};

// src/gnomeyland.ts
var GNOMEYLAND = `
default attributes fill="none" stroke="black" stroke-width="3"
text font-size="20pt" dy="15px"
label font-size="20pt" dy="5px"
glow stroke="white" stroke-width="5pt"

# Colors
# object shadow: #fecb86

trail path attributes stroke="#e3bea3" stroke-width="6" fill="none"
river path attributes transform="translate(20,10)" stroke="#6ebae7" stroke-width="8" fill="none" opacity="0.7"
canyon path attributes transform="translate(20,10)" stroke="black" stroke-width="24" fill="none" opacity="0.2"

# paper white
white attributes fill="#f7f7f7"
shadow attributes fill="black" opacity="0.2"

# agriculture
light-soil attributes fill="#e5de47"
soil attributes fill="#b0b446"
dark-soil attributes fill="#c97457"

# coastlines, deserts
rock attributes fill="#b0856a"
dust attributes fill="#ede787"
sand attributes fill="#e3bea3"
water attributes fill="#6ebae7"
ocean attributes fill="#1c86ee"

# wetlands
light-grey attributes fill="#dcddbe"
grey attributes fill="#afbc9e"
dark-grey attributes fill="#859d70"
blue-green attributes fill="#6f9487"
poisoned attributes fill="#af84a5"

# suitable for forests
light-green attributes fill="#b7c18c"
green attributes fill="#77904c"
dark-green attributes fill="#2d501a"

# invisible stuff that we need to create correct PDF files
dry attributes fill="black" opacity="0.1"
port attributes opacity="0"

# debug
red attributes fill="red" opacity="0.8" transform="scale(0.5)"

# Buildings
<g id="Keep"><rect fill="white" height="58" width="49" y="-24" x="-25"/><path style="fill:#fecb86" d="M 5,3 C 2,20 -6,29 -13,34 l 36,0 0,-58 -20,0 c 3,8 4,18 2,27 z"/><path fill="none" stroke="black" stroke-width="5" d="m -25,-24 49,0 0,58 -49,0 z"/><path d="M -12,-6 c 0,-8 -6,-8 -6,0 c 2,0 3,0 6,0 z" stroke="black" stroke-width="2"/><path d="M 15,-6 c 0,-8 -6,-8 -6,0 c 2,0 3,0 6,0 z" stroke="black" stroke-width="2"/><rect fill="white" height="19" width="65" y="-43" x="-34"/><path fill="#fecb86" d="m 26,-35 -6,0 0,-6 -6,0 0,6 -6,0 0,-6 -6,0 0,6 -3,0 c 2,3 3,7 5,12 l 28,0 0,-18 -6,0 0,6 0,0 z"/><path d="m -1,8 c -6,0 -11,11 -11,25 l 22,0 C 10,19 5,8 -1,8 z" stroke="black" stroke-width="2"/><path stroke="black" stroke-width="5" d="m -19,34 76,0"/><path fill="none" stroke="black" stroke-width="5" d="m 32,-24 0,-18 -6,0 0,0 0,6 -6,0 0,-6 -6,0 0,6 -6,0 0,-6 -6,0 0,6 -6,0 0,-6 -6,0 0,6 -6,0 0,-6 -6,0 0,6 -6,0 0,-6 -6,0 0,18 z"/></g>

<g id="keep"><use xlink:href="#Keep" transform="scale(0.6)"/></g>
<g id="tower"><use xlink:href="#Hill" transform="scale(0.9) translate(0,30)"/><use xlink:href="#Keep" transform="scale(0.5) translate(0,-10)"/></g>
<g id="castle"><rect height="16.1" width="38.0" y="1.2" x="-20.0" fill="white"/><path fill="#fecb86" d="m -0.6,17.2 22.6,0.1 0,-18.1 -19.0,0 C 4.5,4.8 -0.3,9.6 -0.6,17.2 z"/><path d="m -20.0,-0.8 42.4,0 0,18.1 -42.4,0 z" fill="none" stroke="black" stroke-width="2.4"/><rect height="8.5" width="50.2" y="-6.5" x="-24.2" fill="white"/><path d="m 13.8,-4.1 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -1.4,0 C 1.9,-2.7 3.1,-1.4 3.4,1.6 l 22.9,0 0,-8.6 -12.4,0 z" fill="#fecb86"/><path d="m 26.2,2.1 0,-8.6 -12.4,0 0,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -12.4,0 0,8.6 z" fill="none" stroke="black" stroke-width="2.4"/><rect fill="white" x="-39.0" y="-10.3" width="23.3" height="27.6"/><path d="m -24.7,2.5 c -1.4,8.1 -5.2,12.4 -8.6,14.8 l 17.1,0 0,-27.6 -9.5,0 c 1.4,3.8 1.9,8.6 1.0,12.9 z" fill="#fecb86"/><path fill="none" stroke="black" stroke-width="2.4" d="m -39.0,-10.3 23.3,0 0,27.6 -23.3,0 z"/><path stroke="black" stroke-width="1.0" d="m -32.8,-1.7 c 0,-3.8 -2.9,-3.8 -2.9,0 1.0,0 1.4,0 2.9,0 z"/><path stroke="black" stroke-width="1.0" d="m -20.0,-1.7 c 0,-3.8 -2.9,-3.8 -2.9,0 1.0,0 1.4,0 2.9,0 z"/><rect fill="white" x="-43.3" y="-19.4" width="31.0" height="9.0"/><path fill="#fecb86" d="m -14.7,-15.5 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -1.4,0 c 1.0,1.4 1.4,3.3 2.4,5.7 l 13.3,0 0,-8.6 -2.9,0 0,2.9 0,0 z"/><path d="m 1.0,4.9 c -2.9,0 -5.2,5.2 -5.2,11.9 l 10.5,0 c 0,-6.7 -2.4,-11.9 -5.2,-11.9 z" stroke="black" stroke-width="1.0"/><path stroke="black" stroke-width="2.4" d="m 18.1,17.3 36.2,0"/><path fill="none" stroke="black" stroke-width="2.4" d="m -11.9,-10.3 0,-8.6 -2.9,0 0,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,8.6 z"/><rect fill="white" height="27.6" width="23.3" y="-10.3" x="18.1"/><path fill="#fecb86" d="M 32.4,2.5 C 31.0,10.6 27.2,14.9 23.8,17.3 l 17.1,0 0,-27.6 -9.5,0 c 1.4,3.8 1.9,8.6 1.0,12.9 z"/><path fill="none" stroke="black" stroke-width="2.4" d="m 18.1,-10.3 23.3,0 0,27.6 -23.3,0 z"/><path stroke="black" stroke-width="1.0" d="m 24.3,-1.7 c 0,-3.8 -2.9,-3.8 -2.9,0 1.0,0 1.4,0 2.9,0 z"/><path stroke="black" stroke-width="1.0" d="m 37.2,-1.7 c 0,-3.8 -2.9,-3.8 -2.9,0 1.0,0 1.4,0 2.9,0 z"/><rect fill="white" height="9.0" width="31.0" y="-19.4" x="13.8"/><path fill="#fecb86" d="m 42.4,-15.5 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -1.4,0 c 1.0,1.4 1.4,3.3 2.4,5.7 l 13.3,0 0,-8.6 -2.9,0 0,2.9 0,0 z"/><path fill="none" stroke="black" stroke-width="2.4" d="m 45.3,-10.3 0,-8.6 -2.9,0 0,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,2.9 -2.9,0 0,-2.9 -2.9,0 0,8.6 z"/></g>

# Settlement Library
<circle id="Thorp" fill="#ffd700" stroke="black" stroke-width="7" cx="0" cy="0" r="15"/>
<g id="House"><rect fill="white" x="-15" y="-50" width="30" height="50"/><path fill="#fecb86" d="M-10,0 C10,-20 10,-40 2,-50 h15 v50 z"/><path stroke="black" stroke-width="7" d="M-15,0 v-50 m-15,0 h60 m-15,0 v50 M0,0 v-37"/></g>
<g id="Hut"><rect fill="white" x="-15" y="-40" width="30" height="40"/><path fill="#fecb86" d="M-10,0 C10,-20 10,-40 2,-40 h15 v40 z"/><path stroke="black" stroke-width="7" d="M-15,0 v-40 m-15,0 h60 m-15,0 v40 M0,0 v-27"/></g>
<path id="Flag" fill="white" stroke="black" stroke-width="7" d="M0,-50 l-3,-30 c-1,-10 8,-10 6,0 z"/>
<path id="Arrow" fill="black" stroke="black" stroke-width="3" d="M10,0 h10 v2 l4,-2 l-4,-2 v2 "/>
<g id="Star"><circle cx="0" cy="0" r="10"/><use xlink:href="#Arrow"/><use xlink:href="#Arrow" transform="rotate(45)"/><use xlink:href="#Arrow" transform="rotate(90)"/><use xlink:href="#Arrow" transform="rotate(135)"/><use xlink:href="#Arrow" transform="rotate(180)"/><use xlink:href="#Arrow" transform="rotate(225)"/><use xlink:href="#Arrow" transform="rotate(270)"/><use xlink:href="#Arrow" transform="rotate(315)"/></g>

# Settlement Icons
<use id="thorp" xlink:href="#Thorp" transform="scale(0.7)"/>
<g id="village"><g transform="scale(0.7)"><g transform="translate(0,40)"><use xlink:href="#House"/><use xlink:href="#Thorp"/><use xlink:href="#Flag"/></g></g></g>
<g id="town"><g transform="scale(0.7)"><g transform="translate(-10,40)"><use xlink:href="#House"/><use xlink:href="#Flag"/><use xlink:href="#Thorp"/><use xlink:href="#Hut" transform="translate(43,15)"/><path stroke="black" stroke-width="7" d="M0,15 h70"/></g></g></g>
<g id="large-town"><g transform="scale(0.7)"><g transform="translate(0,45)"><use xlink:href="#House" transform="translate(-40,0)"/><use xlink:href="#Flag" transform="translate(-40,0)"/><use xlink:href="#House" transform="translate(40,0)"/><use xlink:href="#Flag" transform="translate(40,0)"/><use xlink:href="#Thorp" transform="translate(0,-15)"/><path stroke="black" stroke-width="7" d="M-70,0 h140"/></g></g></g>
<g id="city"><g transform="scale(0.7)"><g transform="translate(0,60)"><use xlink:href="#House" transform="translate(-40,0)"/><use xlink:href="#Flag" transform="translate(-40,0)"/><use xlink:href="#House" transform="translate(40,0)"/><use xlink:href="#Flag" transform="translate(40,0)"/><use xlink:href="#House" transform="translate(0,-15)"/><use xlink:href="#Flag" transform="translate(0,-15)"/><use xlink:href="#Thorp" transform="translate(0,-15)"/><path stroke="black" stroke-width="7" d="M-70,0 h140"/></g></g></g>
<g id="shrine"><path transform="scale(0.7)" fill="none" stroke="black" stroke-width="7" d="M-20,20 v-40 h40 v40 M-20,-20 v-10 M20,-20 v-10 M-30,-30 h60"/></g>
<g id="law" transform="scale(0.7) translate(-20,20)"><use xlink:href="#Arrow" transform="rotate(270) scale(3) translate(-5,0)"/><use xlink:href="#Thorp"/><use xlink:href="#Hut" transform="translate(40,15)"/><path stroke="black" stroke-width="7" d="M0,15 h70"/></g>
<g id="chaos" transform="scale(0.7) translate(-20,40)"><use xlink:href="#Star" transform="scale(1.4) translate(0,-40)"/><use xlink:href="#Thorp"/><use xlink:href="#Hut" transform="translate(40,15)"/><path stroke="black" stroke-width="7" d="M0,15 h70"/></g>

# Deciduous Tree
<g id="Tree"><path d="m 28,-2 c 0,20 -12,31 -27,31 -15,0 -27,-11 -27,-31 0,-20 12,-43 27,-43 15,0 27,22 27,43 z" fill="white"/><path d="m 6,-43 c 0,0 0,16 -4,19 -3,4 -4,15 -1,18 2,3 8,8 5,11 -3,3 -6,5 -5,9 0,4 8,6 -4,8 -11,2 -11,2 -11,2 0,0 13,9 26,2 14,-6 16,-29 16,-29 0,0 4,-21 -22,-41 z" fill="#39b54a"/><path d="m 28,-2 c 0,20 -12,31 -27,31 -15,0 -27,-11 -27,-31 0,-20 12,-43 27,-43 15,0 27,22 27,43 z" stroke="black" fill="none" stroke-width="6"/><rect x="-4" y="30" width="11" height="20" fill="#39b54a" stroke="black" stroke-width="6"/><line x1="-4" y1="50" x2="29" y2="50" fill="#39b54a" stroke="black" stroke-width="6"/></g>
<g id="tree"><use xlink:href="#Tree" transform="scale(0.6)"/></g>
<g id="trees"><use xlink:href="#Tree" transform="scale(0.6) translate(-40,-10)"/><use xlink:href="#Tree" transform="scale(0.7) translate(30,-15)"/><use xlink:href="#Tree" transform="scale(0.55) translate(0,10)"/></g>
<g id="forest"><use xlink:href="#Tree" transform="scale(0.5) translate(-20,-40)"/><use xlink:href="#Tree" transform="scale(0.5) translate(-60,-20)"/><use xlink:href="#Tree" transform="scale(0.5) translate(40,-40)"/><use xlink:href="#Tree" transform="scale(0.5) translate(80,-30)"/><use xlink:href="#Tree" transform="scale(0.5) translate(-40,10)"/><use xlink:href="#Tree" transform="scale(0.5) translate(-100,0)"/><use xlink:href="#Tree" transform="scale(0.5) translate(5,-15)"/><use xlink:href="#Tree" transform="scale(0.5) translate(50,-10)"/><use xlink:href="#Tree" transform="scale(0.5) translate(-60,30)"/><use xlink:href="#Tree" transform="scale(0.5) translate(30,20)"/><use xlink:href="#Tree" transform="scale(0.5) translate(-20,35)"/><use xlink:href="#Tree" transform="scale(0.5) translate(95,25)"/></g>
<path id="fields" fill="none" stroke="black" stroke-width="2" d="M-40,0 L0,30 L40,0 L0,-30 L-40,0 M-30,-7.5 L10,22.5 M-20,-15 L20,15 M-10,-22.5 L30,7.5 M-30,7.5 L10,-22.5 M-20,15 L20,-15 M-10,22.5 L30,-7.5"/>

# Bush
<g id="Bush"><path fill="white" d="m 15,-13 c 1,-2 2,-4 2,-7 0,-9 -8,-17 -18,-17 -10,0 -18,8 -18,17 0,2 1,4 1,6 -8,4 -13,11 -13,20 0,13 13,24 29,24 16,0 29,-11 29,-24 0,-8 -5,-15 -12,-19 z"/><path fill="#39b54a" d="m -16,26 c 0,0 16,-5 12,-21 -4,-17 -2,-17 0,-17 3,0 12,-8 12,-12 0,-5 -4,-2 -5,-5 0,-4 5,-5 9,3 4,8 5,6 1,16 7,4 8,-5 13,19 C 32,30 -8,38 -16,26 z"/><path fill="none" stroke="black" stroke-width="6" d="m 15,-13 c 1,-2 2,-4 2,-7 0,-9 -8,-17 -18,-17 -10,0 -18,8 -18,17 0,2 1,4 1,6 -8,4 -13,11 -13,20 0,13 13,24 29,24 16,0 29,-11 29,-24 0,-8 -5,-15 -12,-19 z"/><path d="m 41,34 c -16,0 -31,0 -47,0 0,-1 0,-2 0,-4" fill="none" stroke="black" stroke-width="6"/></g>
<g id="bush"><use xlink:href="#Bush" transform="scale(0.6)"/></g>
<g id="bushes"><use xlink:href="#Bush" transform="scale(0.5) translate(-30,0)"/><use xlink:href="#Bush" transform="scale(0.5) translate(60,-10)"/><use xlink:href="#Bush" transform="scale(0.5) translate(0,30)"/></g>
<g id="brushland"><use xlink:href="#Bush" transform="scale(0.45) translate(0,-70)"/><use xlink:href="#Bush" transform="scale(0.5) translate(-50,-50)"/><use xlink:href="#Bush" transform="scale(0.5) translate(50,-50)"/><use xlink:href="#Bush" transform="scale(0.5) translate(-20,-20)"/><use xlink:href="#Bush" transform="scale(0.5) translate(-90,-40)"/><use xlink:href="#Bush" transform="scale(0.55) translate(90,-20)"/><use xlink:href="#Bush" transform="scale(0.55) translate(20,0)"/><use xlink:href="#Bush" transform="scale(0.5) translate(-65,0)"/><use xlink:href="#Bush" transform="scale(0.5) translate(80,0)"/><use xlink:href="#Bush" transform="scale(0.45) translate(-120,35)"/><use xlink:href="#Bush" transform="scale(0.5) translate(-30,40)"/><use xlink:href="#Bush" transform="scale(0.5) translate(50,40)"/><use xlink:href="#Bush" transform="scale(0.45) translate(110,40)"/><use xlink:href="#Bush" transform="scale(0.45) translate(20,70)"/></g>

# Coniferous forest
<g id="Fir"><path fill="white" d="m -16,-27 c 0,0 -11,-4 -12,15 -1,19 -9,1 -10,13 -1,13 -1,26 29,30 30,4 37,-15 37,-15 0,0 9,-13 -1,-18 -10,-5 4,-13 -12,-15 -17,-3 11,-14 -9,-14 -20,0 4,-15 -9,-15 -13,0 -13,19 -13,19 z"/><path fill="#39b54a" d="M 30,-2 C 20,-7 34,-15 18,-17 1,-20 28,-31 9,-31 c -5,0 -7,-1 -8,-2 0,0 -25,50 0,64 C 13,38 31,16 31,16 c 0,0 9,-13 -1,-18 z"/><path fill="none" stroke="black" stroke-width="6" d="m -16,-27 c 0,0 -11,-4 -12,15 -1,19 -9,1 -10,13 -1,13 -1,26 29,30 30,4 37,-15 37,-15 0,0 9,-13 -1,-18 -10,-5 4,-13 -12,-15 -17,-3 11,-14 -9,-14 -20,0 4,-15 -9,-15 -13,0 -13,19 -13,19 z"/><path fill="none" stroke="black" stroke-width="6" d="m -7,36 42,0"/></g>
<g id="fir"><use xlink:href="#Fir" transform="scale(0.6)"/></g>
<g id="firs"><use xlink:href="#Fir" transform="scale(0.6) translate(-40,-10)"/><use xlink:href="#Fir" transform="scale(0.7) translate(30,-15)"/><use xlink:href="#Fir" transform="scale(0.55) translate(0,10)"/></g>
<g id="fir-forest"><use xlink:href="#Fir" transform="scale(0.5) translate(-20,-40)"/><use xlink:href="#Fir" transform="scale(0.5) translate(-60,-20)"/><use xlink:href="#Fir" transform="scale(0.5) translate(40,-40)"/><use xlink:href="#Fir" transform="scale(0.5) translate(80,-30)"/><use xlink:href="#Fir" transform="scale(0.5) translate(-40,10)"/><use xlink:href="#Fir" transform="scale(0.5) translate(-100,0)"/><use xlink:href="#Fir" transform="scale(0.5) translate(5,-15)"/><use xlink:href="#Fir" transform="scale(0.5) translate(50,-10)"/><use xlink:href="#Fir" transform="scale(0.5) translate(-60,30)"/><use xlink:href="#Fir" transform="scale(0.5) translate(30,20)"/><use xlink:href="#Fir" transform="scale(0.5) translate(-20,35)"/><use xlink:href="#Fir" transform="scale(0.5) translate(95,25)"/></g>

# Hills & Mountains
<g id="Hill"><path fill="white" d="M 49,17 C -3,-103 -46,16 -46,16"/><path fill="#fecb86" d="m -8,17 c 0,0 50,11 55,-2 C 52,6 8,-46 8,-33 8,10 -8,17 -8,17 z"/><path fill="none" stroke="black" stroke-width="4" d="M 49,17 C -3,-103 -46,16 -46,16"/></g>
<g id="hill"><use xlink:href="#Hill"/></g>
<g id="Mountain"><path fill="white" d="m -48,16 c 0,0 32,-18 44,-42 C 7,-51 49,15 49,15"/> <path style="fill:#fecb86" d="m -1,-32 c 0,0 14,43 -4,47 -18,5 54,0 54,0 0,0 -35,-56 -49,-47 z"/> <path fill="none" stroke="black" stroke-width="3" d="m -48,16 c 0,0 32,-18 44,-42 C 7,-51 49,15 49,15"/></g>
<g id="forest-hill"><use xlink:href="#Hill"/><use xlink:href="#Tree" transform="scale(0.4) translate(65,-60)"/></g>
<g id="fir-hill"><use xlink:href="#Hill"/><use xlink:href="#Fir" transform="scale(0.4) translate(65,-60)"/></g>
<g id="mountain"><use xlink:href="#Mountain"/></g>
<g id="forest-mountain"><use xlink:href="#Mountain"/><use xlink:href="#Tree" transform="scale(0.4) translate(60,-60)"/></g>
<g id="fir-mountain"><use xlink:href="#Mountain"/><use xlink:href="#Fir" transform="scale(0.4) translate(60,-60)"/></g>
<g id="Peak"><path fill="white" d="m 37,30 c 0,0 -37,-130 -47,-82 -10,48 -39,83 -39,83"/><path fill="#fecb86" d="m -8,-62 c 0,0 12,83 -4,93 -16,10 48,0 48,0 0,0 -31,-110 -44,-93 z"/><path fill="none" stroke="black" stroke-width="4" d="m 37,30 c 0,0 -37,-130 -47,-82 -10,48 -39,83 -39,83"/></g>
<g id="mountains"><use xlink:href="#Mountain" transform="scale(0.7) translate(-45,0)"/><use xlink:href="#Peak" transform="scale(0.7)"/><use xlink:href="#Mountain" transform="scale(0.7) translate(40,25)"/></g>
<g id="forest-mountains"><use xlink:href="#Mountain" transform="scale(0.7) translate(-45,0)"/><use xlink:href="#Peak" transform="scale(0.7)"/><use xlink:href="#Mountain" transform="scale(0.7) translate(40,25)"/><use xlink:href="#Tree" transform="scale(0.3) translate(-120,-40)"/><use xlink:href="#Tree" transform="scale(0.3) translate(10,-20)"/><use xlink:href="#Tree" transform="scale(0.3) translate(150,10)"/></g>
<g id="fir-mountains"><use xlink:href="#Mountain" transform="scale(0.7) translate(-45,0)"/><use xlink:href="#Peak" transform="scale(0.7)"/><use xlink:href="#Mountain" transform="scale(0.7) translate(40,25)"/><use xlink:href="#Fir" transform="scale(0.3) translate(-120,-40)"/><use xlink:href="#Fir" transform="scale(0.3) translate(10,-20)"/><use xlink:href="#Fir" transform="scale(0.3) translate(150,10)"/></g>

# Simple things to layer on top
<path id="desert" stroke="black" stroke-width="4" d="M-60,10 v4 M-50,-30 v4 M-40,-0 v4 M-30,40 v4 M-20,-20 v4 M-10,10 v4 M5,-30 v4 M10,20 v4 M20,0 v4 M30,30 v4 M30,-40 v4 M40,10 v4 M60,-10 v4 "/>
<g id="grass"><path stroke="black" stroke-width="6" d="m -21,-24 c -2,7 1,11 4,17"/><path stroke="black" stroke-width="6" d="m -10,-32 c 0,0 -1,15 3,23"/><path stroke="black" stroke-width="6" d="m 3,-20 c 0,0 0,11 -3,13"/><path stroke="black" stroke-width="6" d="m 25,1 c 0,10 7,11 7,21"/><path stroke="black" stroke-width="6" d="m 36,4 c 0,0 6,4 4,15"/><path stroke="black" stroke-width="6" d="m 49,7 c 0,0 -1,11 -1,12"/><path stroke="black" stroke-width="6" d="m -44,10 c 0,7 4,10 6,17"/><path stroke="black" stroke-width="6" d="m -33,5 c -1,7 1,13 3,19"/><path stroke="black" stroke-width="6" d="m -24,14 c 0,0 3,7 3,11"/></g>
<g id="marsh"><path stroke="black" stroke-width="6" d="m -44,6 c 0,0 8,4 9,9"/><path stroke="black" stroke-width="6" d="m -32,1 c 0,0 6,9 6,12"/><path stroke="black" stroke-width="6" d="m -15,-1 c 0,0 -4,10 -3,13"/><path stroke="black" stroke-width="6" d="m -4,5 c 0,0 -7,7 -7,9"/><line stroke="black" stroke-width="6" y2="22" x2="-9" y1="22" x1="-36"/><path stroke="black" stroke-width="6" d="m 2,-16 c 0,0 7,5 7,9"/><path stroke="black" stroke-width="6" d="m 10,-26 c 0,0 7,12 7,16"/><line stroke="black" stroke-width="6" y2="-10" x2="25" y1="-32" x1="25"/><path stroke="black" stroke-width="6" d="m 40,-24 c 0,0 -6,11 -5,16"/><line stroke="black" stroke-width="6" y2="-2" x2="34" y1="-2" x1="11"/></g>
<g id="swamp"><path d="m -24,12 c 0,0 7,3 7,7" stroke="black" stroke-width="5"/><path d="m -14,8 c 0,0 4,7 4,9" stroke="black" stroke-width="5"/><path d="m 0,7 c 0,0 -4,5 -3,9" stroke="black" stroke-width="5"/><path d="m 9,11 c 0,0 -6,6 -6,8" stroke="black" stroke-width="5"/><path stroke="black" stroke-width="5" d="m 12,38 c 0,0 -7,-3 -7,-7"/><path stroke="black" stroke-width="5" d="m 3,43 c 0,0 -4,-7 -4,-9"/><path stroke="black" stroke-width="5" d="m -11,44 c 0,0 4,-6 3,-10"/><path stroke="black" stroke-width="5" d="m -20,40 c 0,0 6,-6 6,-8"/><line x1="-17" y1="25" x2="4" y2="25" stroke="black" stroke-width="5"/><path d="m -4,-34 c 0,0 7,3 7,7" stroke="black" stroke-width="5"/><path d="m 6,-39 c 0,0 4,7 4,9" stroke="black" stroke-width="5"/><path d="m 19,-40 c 0,0 -3,5 -2,9" stroke="black" stroke-width="5"/><path d="m 28,-36 c 0,0 -6,6 -6,8" stroke="black" stroke-width="5"/><path stroke="black" stroke-width="5" d="m 32,-9 c 0,0 -7,-3 -7,-7"/><path stroke="black" stroke-width="5" d="m 22,-4 c 0,0 -4,-7 -4,-9"/><path stroke="black" stroke-width="5" d="m 8,-3 c 0,0 5,-5 3,-10"/><path stroke="black" stroke-width="5" d="m -1,-7 c 0,0 6,-6 6,-8"/><line x1="2" y1="-22" x2="24" y2="-22" stroke="black" stroke-width="5"/></g>
<g id="swamp2"><g transform="translate(-50,-10)"><path d="m -24,12 c 0,0 7,3 7,7" stroke="black" stroke-width="5"/><path d="m -14,8 c 0,0 4,7 4,9" stroke="black" stroke-width="5"/><path d="m 0,7 c 0,0 -4,5 -3,9" stroke="black" stroke-width="5"/><path d="m 9,11 c 0,0 -6,6 -6,8" stroke="black" stroke-width="5"/><path stroke="black" stroke-width="5" d="m 12,38 c 0,0 -7,-3 -7,-7"/><path stroke="black" stroke-width="5" d="m 3,43 c 0,0 -4,-7 -4,-9"/><path stroke="black" stroke-width="5" d="m -11,44 c 0,0 4,-6 3,-10"/><path stroke="black" stroke-width="5" d="m -20,40 c 0,0 6,-6 6,-8"/><line x1="-17" y1="25" x2="4" y2="25" stroke="black" stroke-width="5"/></g><g transform="translate(30,0)"><path d="m -4,-34 c 0,0 7,3 7,7" stroke="black" stroke-width="5"/><path d="m 6,-39 c 0,0 4,7 4,9" stroke="black" stroke-width="5"/><path d="m 19,-40 c 0,0 -3,5 -2,9" stroke="black" stroke-width="5"/><path d="m 28,-36 c 0,0 -6,6 -6,8" stroke="black" stroke-width="5"/><path stroke="black" stroke-width="5" d="m 32,-9 c 0,0 -7,-3 -7,-7"/><path stroke="black" stroke-width="5" d="m 22,-4 c 0,0 -4,-7 -4,-9"/><path stroke="black" stroke-width="5" d="m 8,-3 c 0,0 5,-5 3,-10"/><path stroke="black" stroke-width="5" d="m -1,-7 c 0,0 6,-6 6,-8"/><line x1="2" y1="-22" x2="24" y2="-22" stroke="black" stroke-width="5"/></g></g>
<pattern id="striped" width="10" height="10" patternTransform="rotate(-30)" patternUnits="userSpaceOnUse"><rect x="0" y="0" width="10" height="2" fill="red"/></pattern>
<polygon id="zone" opacity="0.3" fill="url(#striped)" points='-100.0,0.0 -50.0,86.6 50.0,86.6 100.0,0.0 50.0,-86.6 -50.0,-86.6' />

# cliffs for hex maps
<path id="cliff0" transform="rotate(  0)" d="M-90,-17.3 l-8.7,-5 M-80,-34.6 l-8.7,-5 M-70,-52 l-8.7,-5 M-60,-69.3 l-8.7,-5" stroke="black" stroke-width="5px" fill="none"/>
<path id="cliff1" transform="rotate( 60)" d="M-90,-17.3 l-8.7,-5 M-80,-34.6 l-8.7,-5 M-70,-52 l-8.7,-5 M-60,-69.3 l-8.7,-5" stroke="black" stroke-width="5px" fill="none"/>
<path id="cliff2" transform="rotate(120)" d="M-90,-17.3 l-8.7,-5 M-80,-34.6 l-8.7,-5 M-70,-52 l-8.7,-5 M-60,-69.3 l-8.7,-5" stroke="black" stroke-width="5px" fill="none"/>
<path id="cliff3" transform="rotate(180)" d="M-90,-17.3 l-8.7,-5 M-80,-34.6 l-8.7,-5 M-70,-52 l-8.7,-5 M-60,-69.3 l-8.7,-5" stroke="black" stroke-width="5px" fill="none"/>
<path id="cliff4" transform="rotate(240)" d="M-90,-17.3 l-8.7,-5 M-80,-34.6 l-8.7,-5 M-70,-52 l-8.7,-5 M-60,-69.3 l-8.7,-5" stroke="black" stroke-width="5px" fill="none"/>
<path id="cliff5" transform="rotate(300)" d="M-90,-17.3 l-8.7,-5 M-80,-34.6 l-8.7,-5 M-70,-52 l-8.7,-5 M-60,-69.3 l-8.7,-5" stroke="black" stroke-width="5px" fill="none"/>
# cliffs for square maps
<path id="cliffs0" transform="rotate(  0)" d="M-94,70 V-70" stroke-dasharray="5 17" stroke="black" stroke-width="12px" fill="none"/>
<path id="cliffs1" transform="rotate( 90)" d="M-94,70 V-70" stroke-dasharray="5 17" stroke="black" stroke-width="12px" fill="none"/>
<path id="cliffs2" transform="rotate(180)" d="M-94,70 V-70" stroke-dasharray="5 17" stroke="black" stroke-width="12px" fill="none"/>
<path id="cliffs3" transform="rotate(270)" d="M-94,70 V-70" stroke-dasharray="5 17" stroke="black" stroke-width="12px" fill="none"/>

# lakes
<ellipse id="lake" fill="#6ebae7" stroke="black" stroke-width="3" cx="0" cy="0" rx="45" ry="30"/>
`;

// src/constants.ts
var ATTRIBUTES_REGEX = /^(\S+)\s+attributes\s+(.*)/;
var PATH_ATTRIBUTES_REGEX = /^(\S+)\s+path\s+attributes\s+(.*)/;
var PATH_REGEX = /^(\S+)\s+path\s+(.*)/;
var XML_REGEX = /^(<.*>)/;
var TEXT_REGEX = /^text\s+(.*)/;
var GLOW_REGEX = /^glow\s+(.*)/;
var LABEL_REGEX = /^label\s+(.*)/;
var OPTION_REGEX = /^option\s+(.*)/;
var HEX_REGEX = /^(-?\d\d)(-?\d\d)(\d\d)?\s+(.*)/;
var HEX_LABEL_REGEX = /["]([^"]+)["]\s*(\d+)?/;
var SPLINE_REGEX = /^(-?\d\d-?\d\d(?:\d\d)?(?:--?\d\d-?\d\d(?:\d\d)?)+)\s+(\S+)\s*(?:["“](.+)["”])?\s*(left|right)?\s*(\d+%)?/;
var SPLINE_ELEMENT_SPLIT_REGEX = /^(-?\d\d-?\d\d)-?(.* )/;
var SPLINE_POINT_REGEX = /(-?\d\d)(-?\d\d)/;
var ATTRIBUTE_MAP_REGEX = /(\S+)="([^"]+)"/g;
var SVG_CHOMP_WHITESPACE_REGEX = /(>)(\s+)(<)/g;
var SVG_ID_REGEX = /(id=")(\S+)(")/g;
var SVG_HREF_REGEX = /(xlink:href="#)(\S+)(")/g;

// src/orientation.ts
var Point = class {
  constructor(x, y) {
    __publicField(this, "x");
    __publicField(this, "y");
    this.x = x;
    this.y = y;
  }
  toString() {
    return `${this.x.toFixed(1)},${this.y.toFixed(1)}`;
  }
  eq(pt) {
    return this.x == pt.x && this.y == pt.y;
  }
};
var Orientation = class {
  constructor(flatTop = true, swapEvenOdd = false) {
    __publicField(this, "flatTop");
    __publicField(this, "swapEvenOdd");
    __publicField(this, "dy");
    __publicField(this, "dx");
    __publicField(this, "labelOffset");
    this.flatTop = flatTop;
    this.swapEvenOdd = swapEvenOdd;
    if (this.flatTop) {
      this.dx = 100;
      this.dy = 100 * Math.sqrt(3) / 2;
      this.labelOffset = 0.8;
    } else {
      this.dx = 100 * Math.sqrt(3) / 2;
      this.dy = 100;
      this.labelOffset = 0.58;
    }
  }
  viewbox(regions) {
    const xMargin = 60 + this.dx;
    const yMargin = 60 + this.dy;
    let min_x_overall = void 0;
    let max_x_overall = void 0;
    let min_y_overall = void 0;
    let max_y_overall = void 0;
    const pixels = regions.map((r) => this.pixels(new Point(r.x, r.y), 0, 0));
    for (const pixel of pixels) {
      if (min_x_overall == void 0 || pixel.x < min_x_overall) {
        min_x_overall = pixel.x;
      }
      if (min_y_overall == void 0 || pixel.y < min_y_overall) {
        min_y_overall = pixel.y;
      }
      if (max_x_overall == void 0 || pixel.x > max_x_overall) {
        max_x_overall = pixel.x;
      }
      if (max_y_overall == void 0 || pixel.y > max_y_overall) {
        max_y_overall = pixel.y;
      }
    }
    return [
      min_x_overall - xMargin,
      min_y_overall - yMargin,
      max_x_overall + xMargin,
      max_y_overall + yMargin
    ];
  }
  hexCorners() {
    if (this.flatTop) {
      return [
        new Point(-this.dx, 0),
        new Point(-this.dx / 2, this.dy),
        new Point(this.dx / 2, this.dy),
        new Point(this.dx, 0),
        new Point(this.dx / 2, -this.dy),
        new Point(-this.dx / 2, -this.dy)
      ];
    } else {
      return [
        new Point(0, -this.dy),
        new Point(this.dx, -this.dy / 2),
        new Point(this.dx, this.dy / 2),
        new Point(0, this.dy),
        new Point(-this.dx, this.dy / 2),
        new Point(-this.dx, -this.dy / 2)
      ];
    }
  }
  pixels(pt, offsetX = 0, offsetY = 0) {
    if (this.flatTop) {
      const evenOdd = (this.swapEvenOdd ? 1 : 0) * (pt.x % 2);
      const x = pt.x * this.dx * 3 / 2 + offsetX;
      const y = (pt.y + evenOdd) * this.dy * 2 - Math.abs(pt.x) % 2 * this.dy + offsetY;
      return new Point(x, y);
    } else {
      const evenOdd = (this.swapEvenOdd ? 1 : 0) * (pt.y % 2);
      const x = (pt.x + evenOdd) * this.dx * 2 - Math.abs(pt.y) % 2 * this.dx + offsetX;
      const y = pt.y * this.dy * 3 / 2 + offsetY;
      return new Point(x, y);
    }
  }
};

// src/region.ts
var Region = class {
  constructor(namespace) {
    __publicField(this, "x");
    __publicField(this, "y");
    __publicField(this, "types");
    __publicField(this, "label");
    __publicField(this, "size");
    __publicField(this, "id");
    __publicField(this, "namespace");
    this.types = [];
    this.namespace = namespace;
  }
  pixels(orientation, addX, addY) {
    const pix = orientation.pixels(new Point(this.x, this.y), addX, addY);
    return [pix.x, pix.y];
  }
  svg(svgEl, orientation, types) {
    const pix = orientation.pixels(new Point(this.x, this.y));
    for (const type of this.types) {
      if (!types.includes(type)) {
        continue;
      }
      const namespaced = this.namespace(type);
      svgEl.createSvg("use", {
        attr: {
          x: pix.x.toFixed(1),
          y: pix.y.toFixed(1),
          href: `#${namespaced}`
        }
      });
    }
  }
  svgCoordinates(svgEl, orientation, textAttributes, coordinatesFormat) {
    const pix = orientation.pixels(new Point(this.x, this.y), 0, -orientation.dy * orientation.labelOffset);
    const coordEl = svgEl.createSvg("text", {
      attr: __spreadProps(__spreadValues({}, textAttributes), {
        "text-anchor": "middle",
        x: pix.x.toFixed(1),
        y: pix.y.toFixed(1)
      })
    });
    const xStr = this.x.toString().padStart(2, "0");
    const yStr = this.y.toString().padStart(2, "0");
    const content = coordinatesFormat.replace("{X}", xStr).replace("{Y}", yStr);
    coordEl.textContent = content;
  }
  svgRegion(svgEl, orientation, attributes) {
    const points = orientation.hexCorners().map((corner) => {
      return orientation.pixels(new Point(this.x, this.y), corner.x, corner.y).toString();
    }).join(" ");
    svgEl.createSvg("polygon", {
      attr: __spreadProps(__spreadValues({}, attributes), {
        id: this.namespace(this.id),
        points
      })
    });
  }
  svgLabel(svgEl, orientation, labelAttributes, glowAttributes) {
    if (this.label === void 0) {
      return;
    }
    const attributes = __spreadValues({}, labelAttributes);
    const textContent = this.computeLinkAndLabel(this.label).length > 1 ? this.computeLinkAndLabel(this.label)[1] : this.computeLinkAndLabel(this.label)[0];
    const linkContent = this.computeLinkAndLabel(this.label)[0];
    if (this.size !== void 0) {
      attributes["font-size"] = this.size;
    }
    const pix = orientation.pixels(new Point(this.x, this.y), 0, orientation.dy * orientation.labelOffset);
    const gEl = svgEl.createSvg("g");
    const glowEl = gEl.createSvg("text", {
      attr: __spreadValues(__spreadValues({
        "text-anchor": "middle",
        x: pix.x.toFixed(1),
        y: pix.y.toFixed(1)
      }, attributes), glowAttributes)
    });
    glowEl.textContent = textContent;
    if (textContent !== linkContent) {
      const labelLinkEl = gEl.createSvg("a", {
        attr: {
          "data-tooltip-position": "top",
          "aria-label": linkContent,
          href: linkContent,
          "data-href": linkContent,
          class: "internal-link",
          target: "_blank",
          rel: "noopener"
        }
      });
      const labelEl = labelLinkEl.createSvg("text", {
        attr: __spreadValues({
          "text-anchor": "middle",
          x: pix.x.toFixed(1),
          y: pix.y.toFixed(1)
        }, attributes)
      });
      labelEl.textContent = textContent;
    } else {
      const labelEl = gEl.createSvg("text", {
        attr: __spreadValues({
          "text-anchor": "middle",
          x: pix.x.toFixed(1),
          y: pix.y.toFixed(1)
        }, attributes)
      });
      labelEl.textContent = textContent;
    }
  }
  computeLinkAndLabel(label) {
    let link = label;
    let display = label;
    if (label.includes("|")) {
      const parts = label.split("|");
      link = parts[0];
      display = parts[1];
    }
    return [link, display];
  }
};

// src/spline.ts
var Spline = class {
  constructor() {
    __publicField(this, "types");
    __publicField(this, "label");
    __publicField(this, "side");
    __publicField(this, "start");
    __publicField(this, "id");
    __publicField(this, "points");
    __publicField(this, "orientation");
    this.points = [];
  }
  addPoint(x, y) {
    const nX = parseInt(x);
    const nY = parseInt(y);
    this.points.push(new Point(nX, nY));
  }
  computeMissingPoints() {
    let i = 0;
    let current = this.points[i++];
    const result = [current];
    while (i < this.points.length) {
      current = this.oneStep(current, this.points[i]);
      result.push(current);
      if (current.x == this.points[i].x && current.y == this.points[i].y) {
        i++;
      }
    }
    return result;
  }
  oneStep(from, to) {
    let delta;
    const evenOdd = this.orientation.swapEvenOdd ? 1 : 0;
    if (this.orientation.flatTop) {
      delta = [
        [
          new Point(-1, 0 - evenOdd),
          new Point(0, -1),
          new Point(1, 0 - evenOdd),
          new Point(1, 1 - evenOdd),
          new Point(0, 1),
          new Point(-1, 1 - evenOdd)
        ],
        [
          new Point(-1, -1 + evenOdd),
          new Point(0, -1),
          new Point(1, -1 + evenOdd),
          new Point(1, 0 + evenOdd),
          new Point(0, 1),
          new Point(-1, 0 + evenOdd)
        ]
      ];
    } else {
      delta = [
        [
          new Point(0 - evenOdd, -1),
          new Point(1 - evenOdd, -1),
          new Point(1, 0),
          new Point(1 - evenOdd, 1),
          new Point(0 - evenOdd, 1),
          new Point(-1, 0)
        ],
        [
          new Point(-1 + evenOdd, -1),
          new Point(0 + evenOdd, -1),
          new Point(1, 0),
          new Point(0 + evenOdd, 1),
          new Point(-1 + evenOdd, 1),
          new Point(-1, 0)
        ]
      ];
    }
    let min, best;
    for (let i = 0; i < 6; i++) {
      let offset;
      if (this.orientation.flatTop) {
        offset = Math.abs(from.x % 2);
      } else {
        offset = Math.abs(from.y % 2);
      }
      const x = from.x + delta[offset][i].x;
      const y = from.y + delta[offset][i].y;
      let d = (to.x - x) * (to.x - x) + (to.y - y) * (to.y - y);
      if (min === void 0 || d < min) {
        min = d;
        best = new Point(x, y);
      }
    }
    return best;
  }
  partway(from, to, lerp = 1) {
    const pix1 = this.orientation.pixels(from);
    const pix2 = this.orientation.pixels(to);
    return new Point(pix1.x + (pix2.x - pix1.x) * lerp, pix1.y + (pix2.y - pix1.y) * lerp);
  }
  svg(svgEl, orientation, pathAttributes) {
    this.orientation = orientation;
    const points = this.computeMissingPoints();
    let closed = false;
    if (points.length == 0) {
      return;
    }
    if (points[0].eq(points[points.length - 1])) {
      closed = true;
    }
    let path = "";
    if (closed) {
      for (let i = 0; i < points.length - 1; i++) {
        let current = points[i];
        let next = points[i + 1];
        if (path.length === 0) {
          let a = this.partway(current, next, 0.3).toString();
          let b = this.partway(current, next, 0.5).toString();
          let c = this.partway(points[points.length - 1], current, 0.7).toString();
          let d = this.partway(points[points.length - 1], current, 0.5).toString();
          path += `M${d} C${c} ${a} ${b}`;
        } else {
          let b = this.partway(current, next, 0.5).toString();
          let a = this.partway(current, next, 0.3).toString();
          path += ` S${a} ${b}`;
        }
      }
    } else {
      let current, next;
      for (let i = 0; i < points.length - 1; i++) {
        current = points[i];
        next = points[i + 1];
        if (path.length === 0) {
          let a = this.partway(current, next, 0.3).toString();
          let b = this.partway(current, next, 0.5).toString();
          path += `M${a} C${b} ${a} ${b}`;
        } else {
          let a = this.partway(current, next, 0.3).toString();
          let b = this.partway(current, next, 0.5).toString();
          path += ` S${a} ${b}`;
        }
      }
      path += " L" + this.partway(current, next, 0.7).toString();
    }
    svgEl.createSvg("path", {
      attr: __spreadProps(__spreadValues({
        id: this.id,
        type: this.types
      }, pathAttributes[this.types]), {
        d: path
      })
    });
  }
  svgLabel(svgEl, labelAttributes, glowAttributes) {
    if (this.label === void 0) {
      return;
    }
    const points = this.computeMissingPoints();
    const pathAttributes = {
      href: `#${this.id}`
    };
    if (this.side !== void 0) {
      pathAttributes["side"] = this.side;
    } else if (points[1].x < points[0].x || points.length > 2 && points[2].x < points[0].x) {
      pathAttributes["side"] = "right";
    }
    if (this.start !== void 0) {
      pathAttributes["startOffset"] = this.start;
    }
    const gEl = svgEl.createSvg("g");
    const glowEl = gEl.createSvg("text", {
      attr: __spreadValues(__spreadValues({}, labelAttributes), glowAttributes)
    });
    const glowPathEl = glowEl.createSvg("textPath", {
      attr: pathAttributes
    });
    glowPathEl.textContent = this.label;
    const labelEl = gEl.createSvg("text", { attr: labelAttributes });
    const labelPathEl = labelEl.createSvg("textPath", {
      attr: pathAttributes
    });
    labelPathEl.textContent = this.label;
  }
};

// src/parser.ts
var TextMapperParser = class {
  constructor(id) {
    __publicField(this, "id");
    __publicField(this, "pathId");
    __publicField(this, "options");
    __publicField(this, "regions");
    __publicField(this, "attributes");
    __publicField(this, "defs");
    __publicField(this, "path");
    __publicField(this, "splines");
    __publicField(this, "pathAttributes");
    __publicField(this, "textAttributes");
    __publicField(this, "glowAttributes");
    __publicField(this, "labelAttributes");
    __publicField(this, "orientation");
    this.id = id;
    this.options = {
      horizontal: false,
      "coordinates-format": "{X}{Y}",
      "swap-even-odd": false,
      global: false
    };
    this.regions = [];
    this.attributes = {};
    this.defs = [];
    this.path = {};
    this.splines = [];
    this.pathAttributes = {};
    this.textAttributes = "";
    this.glowAttributes = "";
    this.labelAttributes = "";
  }
  namespace(what) {
    if (this.options.global) {
      return `${what}`;
    }
    return `${what}-${this.id}`;
  }
  process(lines) {
    this.pathId = 0;
    for (const line of lines) {
      if (line.startsWith("#")) {
        continue;
      }
      if (OPTION_REGEX.test(line)) {
        const match = line.match(OPTION_REGEX);
        this.parseOption(match[1]);
      }
    }
    if (this.options.horizontal) {
      this.orientation = new Orientation(false, this.options["swap-even-odd"]);
    } else {
      this.orientation = new Orientation(true, this.options["swap-even-odd"]);
    }
    for (const line of lines) {
      if (line.startsWith("#")) {
        continue;
      }
      if (HEX_REGEX.test(line)) {
        const region = this.parseRegion(line);
        this.regions.push(region);
      } else if (SPLINE_REGEX.test(line)) {
        const spline = this.parsePath(line);
        this.splines.push(spline);
      } else if (ATTRIBUTES_REGEX.test(line)) {
        const match = line.match(ATTRIBUTES_REGEX);
        this.attributes[match[1]] = this.parseAttributes(match[2]);
      } else if (XML_REGEX.test(line)) {
        const match = line.match(XML_REGEX);
        this.def(match[1]);
      } else if (PATH_ATTRIBUTES_REGEX.test(line)) {
        const match = line.match(PATH_ATTRIBUTES_REGEX);
        this.pathAttributes[match[1]] = this.parseAttributes(match[2]);
      } else if (PATH_REGEX.test(line)) {
        const match = line.match(PATH_REGEX);
        this.path[match[1]] = match[2];
      } else if (TEXT_REGEX.test(line)) {
        const match = line.match(TEXT_REGEX);
        this.textAttributes = this.parseAttributes(match[1]);
      } else if (GLOW_REGEX.test(line)) {
        const match = line.match(GLOW_REGEX);
        this.glowAttributes = this.parseAttributes(match[1]);
      } else if (LABEL_REGEX.test(line)) {
        const match = line.match(LABEL_REGEX);
        this.labelAttributes = this.parseAttributes(match[1]);
      }
    }
  }
  parseRegion(line) {
    const match = line.match(HEX_REGEX);
    const region = this.makeRegion(match[1], match[2], match[3] || "00");
    let rest = match[4];
    while (HEX_LABEL_REGEX.test(rest)) {
      const labelMatch = rest.match(HEX_LABEL_REGEX);
      region.label = labelMatch[1];
      region.size = labelMatch[2];
      rest = rest.replace(HEX_LABEL_REGEX, "");
    }
    const types = rest.split(/\s+/).filter((t) => t.length > 0);
    region.types = types;
    return region;
  }
  parsePath(line) {
    const match = line.match(SPLINE_REGEX);
    const spline = this.makeSpline();
    spline.types = match[2];
    spline.label = match[3];
    spline.side = match[4];
    spline.start = match[5];
    let rest = line;
    while (true) {
      let segment;
      [segment, rest] = this.splitPathSegments(rest);
      if (segment === null) {
        break;
      }
      const pointMatch = segment.match(SPLINE_POINT_REGEX);
      spline.addPoint(pointMatch[1], pointMatch[2]);
    }
    return spline;
  }
  splitPathSegments(splinePath) {
    let match = splinePath.match(SPLINE_ELEMENT_SPLIT_REGEX);
    if (match === null) {
      return [null, splinePath];
    }
    return [match[1], match[2]];
  }
  def(what) {
    let svg = what.replace(SVG_CHOMP_WHITESPACE_REGEX, "$1$3");
    let match;
    while (match = SVG_ID_REGEX.exec(svg)) {
      svg = svg.replace(match[0], `${match[1]}${this.namespace(match[2])}${match[3]}`);
    }
    while (match = SVG_HREF_REGEX.exec(svg)) {
      svg = svg.replace(match[0], `${match[1]}${this.namespace(match[2])}${match[3]}`);
    }
    this.defs.push(svg);
  }
  makeRegion(x, y, z) {
    const region = new Region(this.namespace.bind(this));
    region.x = parseInt(x);
    region.y = parseInt(y);
    region.id = `hex.${region.x}.${region.y}`;
    return region;
  }
  makeSpline() {
    const spline = new Spline();
    this.pathId++;
    spline.id = this.namespace(`path-${this.pathId}`);
    return spline;
  }
  parseAttributes(attrs) {
    const output = {};
    let matches;
    while (matches = ATTRIBUTE_MAP_REGEX.exec(attrs)) {
      output[matches[1]] = matches[2];
    }
    return output;
  }
  parseOption(optionStr) {
    const option = {
      valid: false,
      key: "",
      value: ""
    };
    const tokens = optionStr.split(" ");
    if (tokens.length < 1) {
      return option;
    }
    option.key = tokens[0];
    if (option.key === "horizontal" || option.key === "swap-even-odd") {
      option.valid = true;
      option.value = true;
    } else if (option.key === "coordinates-format") {
      option.valid = true;
      option.value = tokens.slice(1).join(" ");
    } else if (option.key === "global") {
      option.valid = true;
      option.value = true;
    }
    if (option.valid) {
      this.options[option.key] = option.value;
    }
  }
  shape(svgEl, attributes) {
    const points = this.orientation.hexCorners().map((corner) => corner.toString()).join(" ");
    svgEl.createSvg("polygon", {
      attr: __spreadProps(__spreadValues({}, attributes), {
        points
      })
    });
  }
  svgHeader(el) {
    if (this.regions.length == 0) {
      return el.createSvg("svg");
    }
    const [vx1, vy1, vx2, vy2] = this.orientation.viewbox(this.regions);
    const width = (vx2 - vx1).toFixed(0);
    const height = (vy2 - vy1).toFixed(0);
    const svgEl = el.createSvg("svg", {
      attr: {
        "xmlns:xlink": "http://www.w3.org/1999/xlink",
        viewBox: `${vx1} ${vy1} ${width} ${height}`
      }
    });
    svgEl.createSvg("rect", {
      attr: {
        x: vx1,
        y: vy1,
        width,
        height,
        fill: "white"
      }
    });
    return svgEl;
  }
  svgDefs(svgEl) {
    const defsEl = svgEl.createSvg("defs");
    defsEl.innerHTML = this.defs.join("\n");
    const types = {};
    for (const region of this.regions) {
      for (const rtype of region.types) {
        types[rtype] = 1;
      }
    }
    for (const spline of this.splines) {
      types[spline.types] = 1;
    }
    for (const type of Object.keys(types).sort()) {
      const path = this.path[type];
      const attributes = this.attributes[type];
      if (path || attributes) {
        const gEl = defsEl.createSvg("g", {
          attr: { id: this.namespace(type) }
        });
        if (path && !attributes) {
          gEl.createSvg("path", {
            attr: __spreadProps(__spreadValues({}, this.glowAttributes), {
              d: path
            })
          });
        }
        if (attributes) {
          this.shape(gEl, attributes);
        }
        if (path) {
          gEl.createSvg("path", {
            attr: __spreadProps(__spreadValues({}, this.pathAttributes), {
              d: path
            })
          });
        }
      }
    }
  }
  svgBackgrounds(svgEl) {
    const bgEl = svgEl.createSvg("g", {
      attr: { id: this.namespace("backgrounds") }
    });
    const whitelist = Object.keys(this.attributes);
    for (const region of this.regions) {
      region.svg(bgEl, this.orientation, whitelist);
    }
  }
  svgPaths(svgEl) {
    const splinesEl = svgEl.createSvg("g", {
      attr: { id: this.namespace("paths") }
    });
    for (const spline of this.splines) {
      spline.svg(splinesEl, this.orientation, this.pathAttributes);
    }
  }
  svgThings(svgEl) {
    const thingsEl = svgEl.createSvg("g", {
      attr: { id: this.namespace("things") }
    });
    const blacklist = Object.keys(this.attributes);
    for (const region of this.regions) {
      const filtered = region.types.filter((t) => !blacklist.includes(t));
      region.svg(thingsEl, this.orientation, filtered);
    }
  }
  svgCoordinates(svgEl) {
    const coordsEl = svgEl.createSvg("g", {
      attr: { id: this.namespace("coordinates") }
    });
    for (const region of this.regions) {
      region.svgCoordinates(coordsEl, this.orientation, this.textAttributes, this.options["coordinates-format"]);
    }
  }
  svgRegions(svgEl) {
    const regionsEl = svgEl.createSvg("g", {
      attr: { id: this.namespace("regions") }
    });
    const attributes = this.attributes["default"];
    for (const region of this.regions) {
      region.svgRegion(regionsEl, this.orientation, attributes);
    }
  }
  svgPathLabels(svgEl) {
    const labelsEl = svgEl.createSvg("g", {
      attr: { id: this.namespace("path-labels") }
    });
    for (const spline of this.splines) {
      spline.svgLabel(labelsEl, this.labelAttributes, this.glowAttributes);
    }
  }
  svgLabels(svgEl) {
    const labelsEl = svgEl.createSvg("g", {
      attr: { id: this.namespace("labels") }
    });
    for (const region of this.regions) {
      region.svgLabel(labelsEl, this.orientation, this.labelAttributes, this.glowAttributes);
    }
  }
  svg(el) {
    const svgEl = this.svgHeader(el);
    this.svgDefs(svgEl);
    this.svgBackgrounds(svgEl);
    this.svgPaths(svgEl);
    this.svgThings(svgEl);
    this.svgCoordinates(svgEl);
    this.svgRegions(svgEl);
    this.svgPathLabels(svgEl);
    this.svgLabels(svgEl);
    return svgEl;
  }
};

// src/main.ts
var TextMapperPlugin = class extends import_obsidian2.Plugin {
  onload() {
    return __async(this, null, function* () {
      console.log("Loading Obsidian TextMapper.");
      this.registerMarkdownCodeBlockProcessor("text-mapper", this.processMarkdown.bind(this));
    });
  }
  processMarkdown(source, el, ctx) {
    return __async(this, null, function* () {
      try {
        ctx.addChild(new TextMapper(el, ctx.docId, source));
      } catch (e) {
        console.log("text mapper error", e);
        ctx.addChild(new ParseError(el));
      }
    });
  }
  onunload() {
  }
};
var TextMapper = class extends import_obsidian2.MarkdownRenderChild {
  constructor(containerEl, docId, source) {
    super(containerEl);
    __publicField(this, "textMapperEl");
    this.textMapperEl = this.containerEl.createDiv({ cls: "textmapper" });
    const totalSource = source.split("\n").concat(GNOMEYLAND.split("\n")).concat(APOCALYPSE.split("\n"));
    const parser = new TextMapperParser(docId);
    parser.process(totalSource);
    parser.svg(this.textMapperEl);
  }
};
//# sourceMappingURL=data:application/json;base64,
